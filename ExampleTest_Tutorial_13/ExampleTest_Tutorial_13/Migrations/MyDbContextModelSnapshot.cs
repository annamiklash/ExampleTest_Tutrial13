// <auto-generated />
using System;
using ExampleTest_Tutorial_13.Models.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExampleTest_Tutorial_13.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0-preview.4.20220.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ExampleTest_Tutorial_13.Models.Confectionery", b =>
                {
                    b.Property<int>("IdConfectionery")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<float>("PricePerItem")
                        .HasColumnType("real");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdConfectionery")
                        .HasName("Confectionery_pk");

                    b.ToTable("Confectionery","apbd_order");

                    b.HasData(
                        new
                        {
                            IdConfectionery = 1,
                            Name = "Birthday Cake",
                            PricePerItem = 30.99f,
                            Type = "Cake"
                        },
                        new
                        {
                            IdConfectionery = 2,
                            Name = "Wedding Cake",
                            PricePerItem = 49.99f,
                            Type = "Cake"
                        },
                        new
                        {
                            IdConfectionery = 3,
                            Name = "Chocolate Muffin",
                            PricePerItem = 8.99f,
                            Type = "Muffin"
                        },
                        new
                        {
                            IdConfectionery = 4,
                            Name = "Caramel Brittle",
                            PricePerItem = 15.89f,
                            Type = "Brittle"
                        });
                });

            modelBuilder.Entity("ExampleTest_Tutorial_13.Models.Confectionery_Order", b =>
                {
                    b.Property<int>("IdConfectionery")
                        .HasColumnType("int");

                    b.Property<int>("IdOrder")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("IdConfectionery", "IdOrder");

                    b.HasIndex("IdOrder");

                    b.ToTable("Confectionery_Order","apbd_order");

                    b.HasData(
                        new
                        {
                            IdConfectionery = 1,
                            IdOrder = 1,
                            Notes = "happy bday",
                            Quantity = 1
                        },
                        new
                        {
                            IdConfectionery = 1,
                            IdOrder = 2,
                            Notes = "happy anniversary",
                            Quantity = 2
                        },
                        new
                        {
                            IdConfectionery = 2,
                            IdOrder = 2,
                            Notes = "happy retirement",
                            Quantity = 2
                        },
                        new
                        {
                            IdConfectionery = 3,
                            IdOrder = 4,
                            Notes = "happy graduation",
                            Quantity = 1
                        },
                        new
                        {
                            IdConfectionery = 4,
                            IdOrder = 3,
                            Notes = "--",
                            Quantity = 1
                        },
                        new
                        {
                            IdConfectionery = 2,
                            IdOrder = 5,
                            Notes = "happy 12 bday",
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("ExampleTest_Tutorial_13.Models.Customer", b =>
                {
                    b.Property<int>("IdCustomer")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdCustomer")
                        .HasName("Customer_pk");

                    b.ToTable("Customer","apbd_order");

                    b.HasData(
                        new
                        {
                            IdCustomer = 1,
                            Name = "Kelly",
                            Surname = "Kapour"
                        },
                        new
                        {
                            IdCustomer = 2,
                            Name = "Michael",
                            Surname = "Scott"
                        },
                        new
                        {
                            IdCustomer = 3,
                            Name = "Dwight",
                            Surname = "Schrute"
                        });
                });

            modelBuilder.Entity("ExampleTest_Tutorial_13.Models.Employee", b =>
                {
                    b.Property<int>("IdEmployee")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdEmployee")
                        .HasName("Employee_pk");

                    b.ToTable("Employee","apbd_order");

                    b.HasData(
                        new
                        {
                            IdEmployee = 1,
                            Name = "Jon",
                            Surname = "Doe"
                        },
                        new
                        {
                            IdEmployee = 2,
                            Name = "Anna",
                            Surname = "Smith"
                        },
                        new
                        {
                            IdEmployee = 3,
                            Name = "Jack",
                            Surname = "Daniels"
                        });
                });

            modelBuilder.Entity("ExampleTest_Tutorial_13.Models.Order", b =>
                {
                    b.Property<int>("IdOrder")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAccepted")
                        .HasColumnType("date");

                    b.Property<DateTime>("DateFinished")
                        .HasColumnType("date");

                    b.Property<int>("IdCustomer")
                        .HasColumnType("int");

                    b.Property<int>("IdEmployee")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdOrder")
                        .HasName("Order_pk");

                    b.HasIndex("IdCustomer");

                    b.HasIndex("IdEmployee");

                    b.ToTable("Order","apbd_order");

                    b.HasData(
                        new
                        {
                            IdOrder = 1,
                            DateAccepted = new DateTime(2020, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateFinished = new DateTime(2020, 9, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCustomer = 1,
                            IdEmployee = 1,
                            Notes = "notes ccccc"
                        },
                        new
                        {
                            IdOrder = 2,
                            DateAccepted = new DateTime(2020, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateFinished = new DateTime(2020, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCustomer = 2,
                            IdEmployee = 1,
                            Notes = "notes aaaaa"
                        },
                        new
                        {
                            IdOrder = 3,
                            DateAccepted = new DateTime(2020, 3, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateFinished = new DateTime(2020, 11, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCustomer = 3,
                            IdEmployee = 2,
                            Notes = "notes bbbbb"
                        },
                        new
                        {
                            IdOrder = 4,
                            DateAccepted = new DateTime(2020, 10, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateFinished = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCustomer = 1,
                            IdEmployee = 3,
                            Notes = "notes qqqqq"
                        },
                        new
                        {
                            IdOrder = 5,
                            DateAccepted = new DateTime(2020, 2, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateFinished = new DateTime(2020, 9, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdCustomer = 3,
                            IdEmployee = 2,
                            Notes = "notes slhgkdshk"
                        });
                });

            modelBuilder.Entity("ExampleTest_Tutorial_13.Models.Confectionery_Order", b =>
                {
                    b.HasOne("ExampleTest_Tutorial_13.Models.Confectionery", "Confectionery")
                        .WithMany("Confectionery_Order")
                        .HasForeignKey("IdConfectionery")
                        .HasConstraintName("Confectionery_Confectionery_Order")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExampleTest_Tutorial_13.Models.Order", "Order")
                        .WithMany("Confectionery_Order")
                        .HasForeignKey("IdOrder")
                        .HasConstraintName("Order_Confectionery_Order")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ExampleTest_Tutorial_13.Models.Order", b =>
                {
                    b.HasOne("ExampleTest_Tutorial_13.Models.Customer", "Customer")
                        .WithMany("Order")
                        .HasForeignKey("IdCustomer")
                        .HasConstraintName("Customer_Order")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExampleTest_Tutorial_13.Models.Employee", "Employee")
                        .WithMany("Order")
                        .HasForeignKey("IdEmployee")
                        .HasConstraintName("Employee_Order")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
